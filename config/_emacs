;;; Modified 03.11.2018
;;; Danny Shih

;; initial directory

;; Added by Package.el.  This must come before configurations of
;; installed packages.  Don't delete this line.  If you don't want it,
;; just comment it out by adding a semicolon to the start of the line.
;; You may delete these explanatory comments.
(package-initialize)

(setq inhibit-startup-screen t)
(setq default-directory "~/")

;; put ~ files elsewhere
(setq backup-directory-alist `(("." . "~/emacs-backup/")))

;; basic editor stuff
(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(menu-bar-mode nil)
 '(package-selected-packages (quote (## js2-mode)))
 '(tool-bar-mode nil))
 ;no menu (0 or nil)
(setq column-number-mode 1) ;show column number
(set-scroll-bar-mode 'right) ;scrollbar on the right side

;; disable BEEP. 3. Subtly flash the modeline
(setq visible-bell 3)

;; put .h files in c++ mode
(setq auto-mode-alist (append '(("\\.h$" . c++-mode)) auto-mode-alist))

;; custom bindings
(global-set-key (read-kbd-macro "M-\\") 'undo)
(global-set-key (read-kbd-macro "C-j") 'other-window)
(global-set-key (read-kbd-macro "C-i") 'delete-other-windows)
(global-set-key (read-kbd-macro "M-a") 'beginning-of-buffer)
(global-set-key (read-kbd-macro "M-e") 'end-of-buffer)
(global-set-key (read-kbd-macro "C--") 'shrink-window-horizontally)
(global-set-key (read-kbd-macro "C-=") 'enlarge-window-horizontally)
(global-set-key (read-kbd-macro "M-s") 'whitespace-mode)
(global-set-key (read-kbd-macro "M-i") 'indent-region)
(global-set-key (read-kbd-macro "M-r") 'revert-buffer)
(define-key ctl-x-map "g" 'goto-line)
(define-key ctl-x-map "r" 'query-replace)
(define-key ctl-x-map "a" 'mark-whole-buffer)
(defun winfind() (interactive)
  (split-window-horizontally)
  (other-window 1)
  (find-file "./")
  ) (global-set-key (read-kbd-macro "C-t") 'winfind)
;(define-key global-map "\C-h" 'backward-delete-char)

;; colors
(set-background-color "black")
(set-foreground-color "white")
(set-cursor-color "red")

;; default font
; (insert (prin1-to-string (x-list-fonts "*"))) --> Ctrl-J
; ...to view available fonts
; describe-font
;(set-frame-font "Inconsolata-11")

;; font-lock (syntax colors and font faces)
(setq c-mode-hook (lambda () (font-lock-mode 1)))
(setq c++-mode-hook (lambda () (font-lock-mode 1)))
(setq java-mode-hook (lambda () (font-lock-mode 1)))
(setq html-mode-hook (lambda () (font-lock-mode 1)))
;; override colors
(copy-face 'bold 'font-lock-comment-face) ;comments bold and blue
(set-face-foreground 'font-lock-comment-face "cornflower blue")
(set-face-foreground 'font-lock-string-face "SeaGreen3") ;strings green
(set-face-foreground 'font-lock-keyword-face "violet") ;keywords violet
(set-face-foreground 'font-lock-type-face "cadet blue") ;types blue
(set-face-foreground 'font-lock-variable-name-face "khaki3") ;variables khaki
(set-face-foreground 'font-lock-function-name-face "yellow green") ;funtions yellow/green
(set-face-foreground 'font-lock-preprocessor-face "orange") ;preprocessor orange

;; indentation
(setq c-default-style
      '( (c-mode . "stroustrup")
	 (c++-mode . "stroustrup")
	 (java-mode . "java")
	 ))
;; - random tab stuff
(setq-default indent-tabs-mode nil)
(setq-default tab-width 4)

;; "newline-and-indent" on Enter key
(global-set-key "\C-m" 'newline-and-indent)

;; dos2unix/unix2dos from Benjamin Rutt's .emacs
(defun dos2unix () (interactive)
  (goto-char (point-min))
  (while (search-forward "\r" nil t) (replace-match "")))
(defun unix2dos () (interactive)
  (goto-char (point-min))
  (while (search-forward "\n" nil t) (replace-match "\r\n")))


;; Javascript mode
(require 'package)
(let* ((no-ssl (and (memq system-type '(windows-nt ms-dos))
                    (not (gnutls-available-p))))
       (proto (if no-ssl "http" "https")))
  (when no-ssl (warn "\
Your version of Emacs does not support SSL connections,
which is unsafe because it allows man-in-the-middle attacks.
There are two things you can do about this warning:
1. Install an Emacs version that does support SSL and be safe.
2. Remove this warning from your init file so you won't see it again."))
  (add-to-list 'package-archives (cons "melpa" (concat proto "://melpa.org/packages/")) t)
  ;; Comment/uncomment this line to enable MELPA Stable if desired.  See `package-archive-priorities`
  ;; and `package-pinned-packages`. Most users will not need or want to do this.
  ;;(add-to-list 'package-archives (cons "melpa-stable" (concat proto "://stable.melpa.org/packages/")) t)
  )
(package-initialize)
(add-to-list 'auto-mode-alist '("\\.js\\'" . js2-mode))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 )
